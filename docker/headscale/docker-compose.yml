---
services:
    headscale:
        hostname: "headscale-${HOSTNAME}" #
        image: headscale/headscale:0.25
        container_name: headscale
        restart: unless-stopped
        env_file:
            - "${BAK_CFG_DIR}/headscale/.env"
        volumes:
            - "${BAK_CFG_DIR}/headscale/conf:/etc/headscale" #
            - headscale-data:/var/lib/headscale
        entrypoint: headscale serve
        networks:
            - proxy
        labels:
            traefik.enable: "true"
            traefik.docker.network: "proxy"
            # Headscale Service Configuration
            traefik.http.services.headscale.loadbalancer.server.port: 8080
            traefik.http.routers.headscale.rule: Host(`headscale.${CF_DOMAIN}`)
            traefik.http.routers.headscale.service: headscale
            # CORS Middleware Configuration
            traefik.http.middlewares.headscale-cors.headers.accessControlAllowMethods: "GET,POST,PUT,PATCH,DELETE,OPTIONS"
            traefik.http.middlewares.headscale-cors.headers.accessControlAllowHeaders: "Authorization,Content-Type"
            traefik.http.middlewares.headscale-cors.headers.accessControlAllowOriginList: "https://admin.${CF_DOMAIN}"
            traefik.http.middlewares.headscale-cors.headers.accessControlMaxAge: 100
            traefik.http.middlewares.headscale-cors.headers.addVaryHeader: true
            # Attach Middleware to Router
            traefik.http.routers.headscale.middlewares: headscale-cors

    headscale-admin:
        image: goodieshq/headscale-admin:0.25
        container_name: headscale-admin
        restart: unless-stopped
        networks:
            - proxy
        labels:
            traefik.enable: "true"
            traefik.docker.network: "proxy"
            # Headscale Admin Service Configuration
            traefik.http.services.headscale-admin.loadbalancer.server.port: 80
            traefik.http.routers.headscale-admin.rule: Host(`admin.${CF_DOMAIN}`) && PathPrefix(`/admin`)
            traefik.http.routers.headscale-admin.middlewares: middlewares-authentik@file #add this to any container you want to use the Authentik web proxy


networks:
    proxy:
        external: true

volumes:
    headscale-data:
