---
services:
    immich-server:
        container_name: immich_server
        image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
        extends:
            file: hwaccel.transcoding.yml
            service: ${TRANSCODING_BACKEND:-cpu}
        volumes:
            - ${UPLOAD_LOCATION}:/usr/src/app/upload
            - ${DATA_DIR}:/mnt/merger:ro # update and uncomment with external library path
            - /mnt/files/:/mnt/files:ro
            - /etc/localtime:/etc/localtime:ro
        env_file:
            - "${BAK_CFG_DIR}/immich/.env"
        networks:
            - proxy
        ports:
            - '2283:2283'
        depends_on:
            - redis # don't change name of these two services
            - database # immich-server bootloops if you change the name
        restart: always
        healthcheck:
            disable: false
        # labels:
        #     - "traefik.enable=true"
        #     - "traefik.http.routers.immich.rule=Host(`immich.${CF_DOMAIN}`)"

    immich-machine-learning:
        container_name: immich_machine_learning
        image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}-rocm
        extends:
            file: hwaccel.ml.yml
            service: rocm
        volumes:
            - model-cache:/cache
        env_file:
            - "${BAK_CFG_DIR}/immich/.env"
        restart: always
        networks:
            - proxy
        healthcheck:
            disable: false

    redis:
        container_name: immich_redis
        image: docker.io/valkey/valkey:8-bookworm
        healthcheck:
            test: redis-cli ping || exit 1
        restart: always
        networks:
            - proxy

    database:
        container_name: immich_postgres
        image: ghcr.io/immich-app/postgres:14-vectorchord0.3.0-pgvectors0.2.0
        networks:
            - proxy
        environment:
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_DB: ${DB_DATABASE_NAME}
            POSTGRES_INITDB_ARGS: '--data-checksums'
            DB_STORAGE_TYPE: ${DB_STORAGE_TYPE:-SSD}
        volumes:
            - ${DB_DATA_LOCATION}:/var/lib/postgresql/data
        restart: always

volumes:
    model-cache:

networks:
    proxy:
        external: true
