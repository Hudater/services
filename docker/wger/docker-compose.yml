---
# services:
#     wger:
#         # environment:
#         #     - PUID=${PUID}
#         #     - PGID=${PGID}
#         #     - TZ=${TZ}
#         #     - HOSTNAME=${HOSTNAME}
#         image: MAINTAINER/IMAGE:latest
#         container_name: "wger-${HOSTNAME}" #
#         hostname: "wger-${HOSTNAME}" #
#         env_file:
#             - "${BAK_CFG_DIR}/wger/.env"
#         restart: unless-stopped
#         volumes:
#             - "${CFG_DIR}/wger:/config" #
#         ports:
#             - 80:80 #
# networks:
#     - proxy
# labels:
#     traefik.enable: true
#     traefik.http.services.wger.loadbalancer.server.port: portNumber #
#     traefik.http.routers.wger.middlewares: oauth@file #add this to any container you want to use the Authentik web proxy
#     com.centurylinklabs.watchtower.monitor-only: true #to only monitor update with watchtower not install
#
# Please consult the `Deployment` section in the docs if you want to deploy
# this. You *need* to keep this nginx service, even if you have your own,
# otherwise the static files will not be served correctly! If you do remove
# it, configure yours similarly to what's in config/nginx.conf
# Also take a look at the "Static files" section in the .env file

services:
  web:
    image: docker.io/wger/server:latest
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
    env_file:
      - ./config/prod.env
    volumes:
      - static:/home/wger/static
      - media:/home/wger/media
    expose:
      - 8000
    logging:
      driver: json-file
      options:
        max-size: 5m
        max-file: 5
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8000
      interval: 10s
      timeout: 5s
      start_period: 300s
      retries: 5
    restart: unless-stopped

  nginx:
    image: docker.io/nginx:stable
    depends_on:
      - web
    volumes:
      - ./config/nginx.conf:/etc/nginx/conf.d/default.conf
      - static:/wger/static:ro
      - media:/wger/media:ro
    ports:
      - "80:80"
    healthcheck:
      test: service nginx status
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  db:
    image: docker.io/postgres:15-alpine
    environment:
      - POSTGRES_USER=wger
      - POSTGRES_PASSWORD=wger
      - POSTGRES_DB=wger
      - TZ=Europe/Berlin
    volumes:
      - postgres-data:/var/lib/postgresql/data/
    expose:
      - 5432
    logging:
      driver: json-file
      options:
        max-size: 5m
        max-file: 5
    healthcheck:
      test: pg_isready -U wger
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  cache:
    image: docker.io/redis
    expose:
      - 6379
    logging:
      driver: json-file
      options:
        max-size: 5m
        max-file: 5
    volumes:
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf
      - redis-data:/data
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

    # You probably want to limit the memory usage of the cache, otherwise it might
    # hog all the available memory. Remove or change according to your needs.
    #mem_limit: 5gb

  celery_worker:
    image: docker.io/wger/server:latest
    command: /start-worker
    env_file:
      - ./config/prod.env
    volumes:
      - media:/home/wger/media
    logging:
      driver: json-file
      options:
        max-size: 5m
        max-file: 5
    depends_on:
      web:
        condition: service_healthy
    healthcheck:
      test: celery -A wger inspect ping
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  celery_beat:
    image: docker.io/wger/server:latest
    command: /start-beat
    logging:
      driver: json-file
      options:
        max-size: 5m
        max-file: 5
    volumes:
      - celery-beat:/home/wger/beat/
    env_file:
      - ./config/prod.env
    depends_on:
      celery_worker:
        condition: service_healthy

volumes:
  postgres-data:
  celery-beat:
  redis-data:

  # Heads up, if you remove these volumes and use folders directly you need to chown them
  # to the UID and GID 1000 even if it doesn't exist on your system. Also, they should
  # be readable by everyone.
  #
  # https://wger.readthedocs.io/en/latest/production/docker.html#missing-static-files
  media:
  static:

networks:
  default:
    name: wger_network
