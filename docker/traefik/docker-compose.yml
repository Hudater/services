---
services:
  traefik: #NOTE: this name is what traefik uses as subdomain automatically
    container_name: traefik
    image: traefik:latest
    security_opt:
      - no-new-privileges:true
    ports:
      - 80:80
      - 443:443
      - 8080:8080
      - 2224:2224
    volumes:
      - "${BAK_CFG_DIR}/traefik/:/etc/traefik/"
      - "${BAK_CFG_DIR}/traefik/captcha.html:/captcha.html"
      - "${BAK_CFG_DIR}/traefik/ban.html:/ban.html"
      - "${BAK_CFG_DIR}/traefik/logs:/var/log/traefik"
    networks:
      - proxy # rename this to your custom docker network
    #extra_hosts for nextcloud-aio
    # extra_hosts:
    #   - "host.docker.internal:host-gateway"
    env_file:
          - "${BAK_CFG_DIR}/traefik/.env"
    # environment:
    #   CF_DNS_API_TOKEN: "${CF_DNS_API_TOKEN}"
    #   CF_API_EMAIL: "${CF_API_EMAIL}"
    labels:
      traefik.enable: true   # Enable Traefik reverse proxy for the Traefik dashboard.
      traefik.http.routers.api.rule: Host(`traefik.${CF_DOMAIN}`)    # Define the subdomain for the traefik dashboard.
      traefik.http.routers.api.entryPoints: https    # Set the Traefik entry point.
      traefik.http.routers.api.middlewares: oauth@file #add this to any container you want to use the Authentik web proxy
      traefik.http.services.api.loadbalancer.server.port: 8080
      traefik.http.routers.api.service: api@internal
    restart: always
    healthcheck:
      test: ['CMD', 'traefik', 'healthcheck', '--ping']
      interval: 10s
      timeout: 10s
      retries: 5
    depends_on:
      dockersocket:
        condition: service_healthy
      traefik-redis:
        condition: service_healthy

  dockersocket:
    container_name: dockersocket
    image: tecnativa/docker-socket-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - proxy
    environment:
      CONTAINERS: 1
      POST: 0
    privileged: true
    restart: always
    healthcheck:
      test: wget --spider --tries=1 http://localhost:2375/_ping || exit 1
      interval: "29s"
      timeout: "5s"
      retries: 3
      start_period: "21s"

  traefik-redis:
    image: docker.io/library/redis:latest
    container_name: traefik-redis
    command: --save 60 1 --loglevel warning
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - "${DB_CFG_DIR}/traefik_redis/:/data"
    restart: unless-stopped
    networks:
      - proxy

networks:
  proxy:    # rename this to your custom docker network.
    external: true

# volumes:
#   traefik-logs:
